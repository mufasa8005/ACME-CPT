//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Acme.Web.AcmeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/Acme.Service.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EmployedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TerminatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EmployedDate {
            get {
                return this.EmployedDateField;
            }
            set {
                if ((this.EmployedDateField.Equals(value) != true)) {
                    this.EmployedDateField = value;
                    this.RaisePropertyChanged("EmployedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeNumber {
            get {
                return this.EmployeeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNumberField, value) != true)) {
                    this.EmployeeNumberField = value;
                    this.RaisePropertyChanged("EmployeeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminatedDate {
            get {
                return this.TerminatedDateField;
            }
            set {
                if ((this.TerminatedDateField.Equals(value) != true)) {
                    this.TerminatedDateField = value;
                    this.RaisePropertyChanged("TerminatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AcmeServiceReference.IAcmeService")]
    public interface IAcmeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/AddEmployee", ReplyAction="http://tempuri.org/IAcmeService/AddEmployeeResponse")]
        string AddEmployee(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/AddEmployee", ReplyAction="http://tempuri.org/IAcmeService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<string> AddEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/GetEmployees", ReplyAction="http://tempuri.org/IAcmeService/GetEmployeesResponse")]
        System.Data.DataSet GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/GetEmployees", ReplyAction="http://tempuri.org/IAcmeService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/DeleteEmployee", ReplyAction="http://tempuri.org/IAcmeService/DeleteEmployeeResponse")]
        string DeleteEmployee(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/DeleteEmployee", ReplyAction="http://tempuri.org/IAcmeService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/SearchEmployee", ReplyAction="http://tempuri.org/IAcmeService/SearchEmployeeResponse")]
        System.Data.DataSet SearchEmployee(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/SearchEmployee", ReplyAction="http://tempuri.org/IAcmeService/SearchEmployeeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/UpdateEmployee", ReplyAction="http://tempuri.org/IAcmeService/UpdateEmployeeResponse")]
        string UpdateEmployee(Acme.Web.AcmeServiceReference.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcmeService/UpdateEmployee", ReplyAction="http://tempuri.org/IAcmeService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<string> UpdateEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAcmeServiceChannel : Acme.Web.AcmeServiceReference.IAcmeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcmeServiceClient : System.ServiceModel.ClientBase<Acme.Web.AcmeServiceReference.IAcmeService>, Acme.Web.AcmeServiceReference.IAcmeService {
        
        public AcmeServiceClient() {
        }
        
        public AcmeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AcmeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AcmeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AcmeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddEmployee(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.AddEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<string> AddEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.AddEmployeeAsync(emp);
        }
        
        public System.Data.DataSet GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public string DeleteEmployee(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.DeleteEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.DeleteEmployeeAsync(emp);
        }
        
        public System.Data.DataSet SearchEmployee(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.SearchEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.SearchEmployeeAsync(emp);
        }
        
        public string UpdateEmployee(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.UpdateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEmployeeAsync(Acme.Web.AcmeServiceReference.Employee emp) {
            return base.Channel.UpdateEmployeeAsync(emp);
        }
    }
}
